diff --git a/dlls/winex11.drv/mouse.c b/dlls/winex11.drv/mouse.c
index 06c5f7a4981..016e99b7568 100644
--- a/dlls/winex11.drv/mouse.c
+++ b/dlls/winex11.drv/mouse.c
@@ -545,6 +545,7 @@ static BOOL grab_clipping_window( const RECT *clip )
     }

     TRACE( "clipping to %s win %lx\n", wine_dbgstr_rect(clip), clip_window );
+    reset_clipping_window();

     if (!data->clip_hwnd) XUnmapWindow( data->display, clip_window );
     pos = virtual_screen_to_root( clip->left, clip->top );
@@ -802,8 +803,6 @@ static void send_mouse_input( HWND hwnd, Window window, unsigned int state, INPU
     if (hwnd != GetDesktopWindow())
     {
         hwnd = GetAncestor( hwnd, GA_ROOT );
-        if ((input->u.mi.dwFlags & (MOUSEEVENTF_LEFTDOWN|MOUSEEVENTF_RIGHTDOWN)) && hwnd == GetForegroundWindow())
-            clip_fullscreen_window( hwnd, FALSE );
     }

     /* update the wine server Z-order */
@@ -1691,15 +1690,6 @@ BOOL CDECL X11DRV_ClipCursor( LPCRECT clip )
         {
             if (grab_clipping_window( clip )) return TRUE;
         }
-        else /* if currently clipping, check if we should switch to fullscreen clipping */
-        {
-            struct x11drv_thread_data *data = x11drv_thread_data();
-            if (data && data->clip_hwnd)
-            {
-                if (EqualRect( clip, &clip_rect ) || clip_fullscreen_window( foreground, TRUE ))
-                    return TRUE;
-            }
-        }
     }
     ungrab_clipping_window();
     return TRUE;
@@ -1718,8 +1708,6 @@ LRESULT clip_cursor_request( HWND hwnd, BOOL fullscreen, BOOL reset )
         WARN( "ignoring clip cursor request on desktop window.\n" );
     else if (hwnd != GetForegroundWindow())
         WARN( "ignoring clip cursor request on non-foreground window.\n" );
-    else if (fullscreen)
-        clip_fullscreen_window( hwnd, reset );
     else
     {
         GetClipCursor( &clip );

